{"version":3,"sources":["elements/_body.scss","elements/_headings.scss","variables/_typography.scss","mixins/_breakpoint.scss","elements/_paragraphs.scss","components/_custom-logo.scss","components/_footer.scss","variables/_colors.scss","components/_header.scss","components/_wp-block-cover.scss","components/_wp-block-embed.scss","components/_wp-block-quote.scss"],"names":[],"mappings":"AAAA,KACC,6DAAA,CCDD,kBAMC,iDAAA,CAaA,OAOE,iBAAA,CAMA,eC6BS,CD1BT,eC0BS,CDvBT,iBCuBS,CCRT,yBFlCF,OAyBG,gBAAA,CAAA,CAzBH,OAOE,iBAAA,CAMA,eC6BS,CD1BT,eC0BS,CDvBT,iBCuBS,CCRT,yBFlCF,OAyBG,gBAAA,CAAA,CAzBH,OAOE,iBAAA,CAMA,eC6BS,CD1BT,eC0BS,CDvBT,iBCuBS,CCRT,yBFlCF,OAyBG,gBAAA,CAAA,CAzBH,OAOE,kBAAA,CAMA,eC6BS,CD1BT,eC0BS,CDvBT,iBCuBS,CCRT,yBFlCF,OAyBG,gBAAA,CAAA,CAzBH,OAOE,kBAAA,CAMA,eC6BS,CD1BT,eC0BS,CDvBT,iBCuBS,CD1CX,OAOE,kBAAA,CAMA,eC6BS,CD1BT,eC0BS,CDvBT,gBCuBS,CE7DZ,EACC,6DAAA,CAEA,QACC,YAAA,CAiBA,KAOE,cAAA,CAGA,iBFsDS,CEnDT,eFmDS,CEhDV,6BACC,YAAA,CAGD,2BACC,eAAA,CDWD,yBChCD,KA0BG,cAAA,CAAA,CAKH,qBAGE,iBAAA,CAGA,iBF2BS,CExBT,eFwBS,CErBV,iCACC,YAAA,CAGD,gCACC,eAAA,CAjBF,sBAGE,iBAAA,CAGA,mBF2BS,CExBT,eFwBS,CErBV,kCACC,YAAA,CAGD,iCACC,eAAA,CAjBF,qBAGE,gBAAA,CAGA,kBF2BS,CExBT,eFwBS,CErBV,iCACC,YAAA,CAGD,gCACC,eAAA,CDhBD,yBCDD,qBAsBG,kBAAA,CAAA,CAtBH,oBAGE,cAAA,CAGA,mBF2BS,CExBT,eFwBS,CErBV,gCACC,YAAA,CAGD,+BACC,eAAA,CDhBD,yBCDD,oBAsBG,iBAAA,CAAA,CCtEL,kBACC,aAAA,CACA,QAAA,CACA,UAAA,CACA,6BANmB,CAOnB,iBAAA,CAEA,4CAEC,aAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CCdD,6BACC,8BAAA,CAMA,sKAIC,SAAA,CAGD,uCACC,YChBe,CDuBhB,gCACC,mBAAA,CACA,oBAAA,CAKH,0BACC,YAAA,CEhCD,aACC,uBAAA,CAAA,eAAA,CACA,KAAA,CAGD,gBACC,UAAA,CACA,kBAAA,CL8CE,yBKhDH,gBAKE,aAAA,CAAA,CCRD,qBACC,eAAA,CAEA,6BACC,oBAAA,CAGD,4BACC,WAAA,CACA,wBAAA,CACA,yBAAA,CAAA,iBAAA,CACA,iBAAA,CACA,YAAA,CACA,cAAA,CACA,eAAA,CACA,aAAA,CACA,SAAA,CAGD,sDACC,iBAAA,CACA,SAAA,CAKA,yCACC,2BAAA,CC7BJ,gBACC,sDAAA,CAAA,8CAAA,CCCA,8BACC,yCAAA,CAEA,gCACC,wBAAA","file":"../scss/main.css","sourcesContent":["body {\n\tfont-family: $primary-font-stack !important;\n}\n","h1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\tfont-family: $secondary-font-stack !important;\n}\n\n/**\n * Headings\n *\n * @see ../config/variables/_typography.scss for heading font-size variables.\n *\n * @since 1.0.0\n */\n\n @each $el, $font-size, $line-height, $margin, $font-weight, $font-style, $color, $mobile-font-size in $headings {\n\n\t#{$el},\n\t.#{$el},\n\t%#{$el} {\n\t\t@if $color {\n\t\t\tcolor: $color;\n\t\t}\n\t\t@if $font-size {\n\t\t\tfont-size: rem($font-size);\n\t\t}\n\t\t@if $font-style {\n\t\t\tfont-style: $font-style;\n\t\t}\n\t\t@if $font-weight {\n\t\t\tfont-weight: $font-weight;\n\t\t}\n\t\t@if $line-height {\n\t\t\tline-height: $line-height;\n\t\t}\n\t\t@if $margin {\n\t\t\tmargin: $margin;\n\t\t}\n\n\t\t// Responsive considerations\n\t\t@if $mobile-font-size {\n\t\t\t@include breakpoint(md, max) {\n\t\t\t\tfont-size: em($mobile-font-size);\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * TYPOGRAPHY\n * Contains all font-size and font-stack variables.\n *\n * @since 1.0.0\n */\n\n/**\n * Font Sizes\n *\n * @since 1.0.0\n */\n\n// The font size set on the root html element.\n$base-font-size: 16;\n\n// The base line height determines the basic unit of vertical rhythm.\n$base-line-height: ( 30 / 16 );\n\n/**\n * Font Stacks\n *\n * @since 1.0.0\n */\n\n// Primary Font\n$primary-fallback-font-stack: Helvetica, Arial, sans-serif;\n$primary-font: \"Open Sans\";\n$primary-font-stack: $primary-font, $primary-fallback-font-stack;\n\n// Secondary Font\n$secondary-fallback-font-stack: Georgia, serif;\n$secondary-font: \"Montserrat\";\n$secondary-font-stack: $secondary-font, $secondary-fallback-font-stack;\n\n// The font sizes for h1-h6.\n$h1-font-size: 52;\n$h2-font-size: 44;\n$h3-font-size: 36;\n$h4-font-size: 30;\n$h5-font-size: 22;\n$h6-font-size: 14;\n\n// Smartphone specific font sizes for h1-h5.\n$h1-mobile-font-size: 36;\n$h2-mobile-font-size: 30;\n$h3-mobile-font-size: 26;\n$h4-mobile-font-size: 24;\n$h5-mobile-font-size: null;\n$h6-mobile-font-size: null;\n\n/**\n * Heading Config\n *\n * @see ../config/variables/_typography.scss for heading size variables.\n *\n * @since 1.0.0\n *\n * @type el, font-size, line-height, margin, font-weight, font-style, color, mobile font-size\n * Use false or null to leave a property blank.\n */\n $headings: (\n\t(h1, $h1-font-size, 1.2, 1em 0 .5em, 700, null, null, $h1-mobile-font-size),\n\t(h2, $h2-font-size, 1.2, 1em 0 .5em, 700, null, null, $h2-mobile-font-size),\n\t(h3, $h3-font-size, 1.2, 1em 0 .5em, 700, null, null, $h3-mobile-font-size),\n\t(h4, $h4-font-size, 1.4, 1em 0 .5em, 700, null, null, $h4-mobile-font-size),\n\t(h5, $h5-font-size, 1.4, 1em 0 .5em, 700, null, null, $h5-mobile-font-size),\n\t(h6, $h6-font-size, 1.4, 2em 0 1em, 700, null, null, $h6-mobile-font-size)\n);\n\n/**\n * Paragraph Styles Map.\n *\n * Used for styling paragraph modifications and creating classes/placeholder classes.\n *\n * @since 1.0.0\n *\n * @type modifier, font-size, line-height, margin, font-weight, mobile-font-size\n * Use false or null to leave a property blank.\n */\n$p-size: $base-font-size;\n$p-size--small: $p-size * .75;\n$p-size--medium: $p-size * 1.25;\n$p-size--large: $p-size * 1.5;\n$p-size--huge: $p-size * 2;\n$paragraphs: (\n\t( \"base\", $p-size, $base-line-height, 1em auto, null, 16 ),\n\t( \"has-small-font-size\", $p-size--small, $base-line-height, 1em auto, null, null ),\n\t( \"has-medium-font-size\", $p-size--medium, $base-line-height * .95, 1em auto, null, null ),\n\t( \"has-large-font-size\", $p-size--large, $base-line-height * .9, 1em auto, null, $p-size--medium * 1.1 ),\n\t( \"has-huge-font-size\", $p-size--huge, $base-line-height * .85, 1em auto, null, $p-size--large * 1.1 ),\n);\n","/**\n * Map of breakpoint names and their pixel values.\n */\n $breakpoints: (\n\txs: 480px,\n\tsm: 600px,\n\tmd: 782px,\n\tlg: 960px,\n\txl: 1440px,\n\tmenu: 960px,\n);\n\n/**\n * Function for getting breakpoint values from the $breakpoints map.\n */\n@function get-breakpoint($breakpoint) {\n\t@return map-get($breakpoints, $breakpoint);\n}\n\n/**\n * Loopable array of breakpoint keys for creating modifier classes based on breakpoints.\n */\n$breakpoint-keys: (xs, sm, md, lg, xl);\n\n/**\n * All-Purpose Media Query Mixin\n *\n * This mixin is extremely flexible. It accepts keys from the $breakpoints map,\n * pixel values for on the fly media queries, or unitless media queries like\n * \"orientation\". This mixin should be used whenever possible in the place of\n * hard-coded @media queries.\n *\n * Examples.\n *\n * // Min or Max\n * @include breakpoint(sm) {...} // 640px and above\n * @include breakpoint(sm, max) {...} // 639px and below\n *\n * // Nesting for Min and Max\n * @include breakpoint(sm) { // min of 640px...\n *    @include breakpoint(md, max) {...} // ...and max of 849px\n * }\n *\n * // Custom px values\n * @include breakpoint(984) {...} // 984\n *\n * // Non-px values\n * @include breakpoint(landscape, orientation) {...} // @media (orientation: landscape)\n */\n@mixin breakpoint($breakpoint, $direction: min) {\n\t$breakpoint-value: get-breakpoint($breakpoint);\n\t@if $breakpoint-value {\n\t\t@if $direction == max {\n\t\t\t@media (max-width: ($breakpoint-value - 1)) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == min {\n\t\t\t@media (min-width: $breakpoint-value) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else {\n\t\t\t@media ($direction: $breakpoint-value) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t} @else {\n\t\t@if $direction == max {\n\t\t\t@media (max-width: $breakpoint) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == min {\n\t\t\t@media (min-width: $breakpoint) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else {\n\t\t\t@media ($direction: $breakpoint) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Mobile Menu Mixin\n *\n * Passes when less than the menu breakpoint or hover is not supported.\n */\n@mixin mobile-menu {\n\t@media (max-width: (get-breakpoint(menu) - 1)),\n\t(hover: none) {\n\t\t@content;\n\t}\n}\n\n/**\n * Desktop Menu Mixin\n *\n * Passes when greater than or equal to the menu breakpoint and  hover is supported.\n * Secondarily, passes always in IE via -ms-high-contrast check.\n */\n@mixin desktop-menu {\n\t@media (min-width: get-breakpoint(menu)) and (hover: hover),\n\t(min-width: get-breakpoint(menu)) and (-ms-high-contrast: none),\n\t(min-width: get-breakpoint(menu)) and (-ms-high-contrast: active) {\n\t\t@content;\n\t}\n}\n\n/**\n * Hover Mixin\n *\n * Passes if hover is supported or if on IE, which doesn't support the hover media query.\n */\n@mixin hover {\n\t@media (hover: hover),\n\t(-ms-high-contrast: none),\n\t(-ms-high-contrast: active) {\n\t\t@content;\n\t}\n}\n\n/**\n * Touch Mixin\n *\n * Passes if hover is not supported.\n */\n@mixin touch {\n\t@media (hover: none) {\n\t\t@content;\n\t}\n}\n","p {\n\tfont-family: $primary-font-stack !important;\n\n\t&:empty {\n\t\tdisplay: none;\n\t}\n}\n\n/**\n * Paragraph Config\n *\n * @see ../config/variables/_typography.scss for paragraph definitions.\n *\n * @since 1.0.0\n *\n * @type modifier, font-size, line-height, margin, font-weight, mobile-font-size\n * Use false or null to leave a property blank.\n */\n @each $modifier, $font-size, $line-height, $margin, $font-weight, $mobile-font-size in $paragraphs {\n\n\t@if ( $modifier == \"base\" ) {\n\t\tp,\n\t\t.p ,\n\t\t%p {\n\t\t\t@if $font-weight {\n\t\t\t\tfont-weight: $font-weight;\n\t\t\t}\n\t\t\t@if $font-size {\n\t\t\t\tfont-size: rem($font-size);\n\t\t\t}\n\t\t\t@if $line-height {\n\t\t\t\tline-height: $line-height;\n\t\t\t}\n\t\t\t@if $margin {\n\t\t\t\tmargin: $margin;\n\t\t\t}\n\n\t\t\t&:first-child {\n\t\t\t\tmargin-top: 0;\n\t\t\t}\n\n\t\t\t&:last-child {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\t@if $mobile-font-size {\n\t\t\t\t@include breakpoint(sm, max) {\n\t\t\t\t\tfont-size: rem($mobile-font-size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} @else {\n\t\t.#{$modifier},\n\t\t%#{$modifier} {\n\t\t\t@if $font-size {\n\t\t\t\tfont-size: rem($font-size);\n\t\t\t}\n\t\t\t@if $line-height {\n\t\t\t\tline-height: $line-height;\n\t\t\t}\n\t\t\t@if $margin {\n\t\t\t\tmargin: $margin;\n\t\t\t}\n\n\t\t\t&:first-child {\n\t\t\t\tmargin-top: 0;\n\t\t\t}\n\n\t\t\t&:last-child {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\t@if $mobile-font-size {\n\t\t\t\t@include breakpoint(sm, max) {\n\t\t\t\t\tfont-size: rem($mobile-font-size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n","$logo-height: 189.01;\n$logo-width: 827.24;\n$logo-aspect-ratio: percentage( $logo-height / $logo-width );\n\n.custom-logo-link {\n\tdisplay: block;\n\theight: 0;\n\twidth: 100%;\n\tpadding-bottom: $logo-aspect-ratio;\n\tposition: relative;\n\n\timg,\n\tsvg {\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tposition: absolute;\n\t}\n}\n",".site-footer {\n\n\t.header__titles {\n\t\tmax-width: rem(250) !important;\n\t}\n\n\t.custom-logo-link {\n\n\t\t// sass-lint:disable no-ids\n\t\t#conley,\n\t\t#for-congress,\n\t\t#for-congrress,\n\t\t#now {\n\t\t\tfill: #fff;\n\t\t}\n\n\t\t#ri-map {\n\t\t\tfill: $secondary-color;\n\t\t}\n\t\t// sass-lint:enable no-ids\n\t}\n\n\t&--3 {\n\n\t\t.header__titles {\n\t\t\tmargin-top: rem(10);\n\t\t\tmargin-right: rem(60);\n\t\t}\n\t}\n}\n\n.footer-navigation__title {\n\tdisplay: none;\n}\n","$primary-color: #482063;\n$secondary-color: #0895d2;\n\n$gray-l: #e9eced;\n$gray-xl: #fafafa;\n",".site-header {\n\tposition: sticky;\n\ttop: 0;\n}\n\n.header__titles {\n\twidth: 100%;\n\tmax-width: rem(300);\n\n\t@include breakpoint(menu, max) {\n\t\tmargin: 0 auto;\n\t}\n}\n",".wp-block-cover {\n\n\t&.blur {\n\t\toverflow: hidden;\n\n\t\t&::before {\n\t\t\tz-index: 2 !important;\n\t\t}\n\n\t\t&::after {\n\t\t\tcontent: \" \";\n\t\t\tbackground-image: inherit;\n\t\t\tfilter: blur(16px);\n\t\t\tposition: absolute;\n\t\t\ttop: rem(-20);\n\t\t\tright: rem(-20);\n\t\t\tbottom: rem(-20);\n\t\t\tleft: rem(-20);\n\t\t\tz-index: 1;\n\t\t}\n\n\t\t.wp-block-cover__inner-container {\n\t\t\tposition: relative;\n\t\t\tz-index: 3;\n\t\t}\n\n\t\t&.has-parallax {\n\n\t\t\t&::after {\n\t\t\t\tbackground-attachment: fixed;\n\t\t\t}\n\t\t}\n\t}\n}\n",".wp-block-embed {\n\tbox-shadow: 0 1.5vw 3vw -.7vw rgba(black, .125);\n}\n",".wp-block-quote {\n\n\t&[style*=\"color\"] {\n\t\tborder-left-color: currentColor !important;\n\n\t\t* {\n\t\t\tcolor: inherit !important;\n\t\t}\n\t}\n}\n"]}