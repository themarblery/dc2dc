{"version":3,"sources":["components/_custom-logo.scss","components/_footer.scss","variables/_colors.scss","components/_header.scss","mixins/_breakpoint.scss"],"names":[],"mappings":"AAIA,kBACC,aAAA,CACA,QAAA,CACA,UAAA,CACA,6BANmB,CAOnB,iBAAA,CAEA,4CAEC,aAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CCdD,6BACC,8BAAA,CAKA,sKAIC,SAAA,CAGD,uCACC,YCfe,CDqBhB,gCACC,mBAAA,CACA,oBAAA,CAKH,0BACC,YAAA,CE9BD,gBACC,UAAA,CACA,kBAAA,CCmDE,yBDrDH,gBAKE,aAAA,CAAA","file":"../scss/main.css","sourcesContent":["$logo-height: 189.01;\n$logo-width: 827.24;\n$logo-aspect-ratio: percentage( $logo-height / $logo-width );\n\n.custom-logo-link {\n\tdisplay: block;\n\theight: 0;\n\twidth: 100%;\n\tpadding-bottom: $logo-aspect-ratio;\n\tposition: relative;\n\n\timg,\n\tsvg {\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tposition: absolute;\n\t}\n}\n",".site-footer {\n\n\t.header__titles {\n\t\tmax-width: rem(250) !important;\n\t}\n\n\t.custom-logo-link {\n\n\t\t#conley,\n\t\t#for-congress,\n\t\t#for-congrress,\n\t\t#now {\n\t\t\tfill: #fff;\n\t\t}\n\n\t\t#ri-map {\n\t\t\tfill: $secondary-color;\n\t\t}\n\t}\n\n\t&--3 {\n\n\t\t.header__titles {\n\t\t\tmargin-top: rem(10);\n\t\t\tmargin-right: rem(60);\n\t\t}\n\t}\n}\n\n.footer-navigation__title {\n\tdisplay: none;\n}\n","$primary-color: #482063;\n$secondary-color: #0895d2;\n\n$gray-l: #e9eced;\n$gray-xl: #fafafa;\n",".header__titles {\n\twidth: 100%;\n\tmax-width: rem(300);\n\n\t@include breakpoint(menu, max) {\n\t\tmargin: 0 auto;\n\t}\n}\n","/**\n * Map of breakpoint names and their pixel values.\n */\n $breakpoints: (\n\txs: 480px,\n\tsm: 600px,\n\tmd: 782px,\n\tlg: 960px,\n\txl: 1440px,\n\tmenu: 960px,\n);\n\n/**\n * Function for getting breakpoint values from the $breakpoints map.\n */\n@function get-breakpoint($breakpoint) {\n\t@return map-get($breakpoints, $breakpoint);\n}\n\n/**\n * Loopable array of breakpoint keys for creating modifier classes based on breakpoints.\n */\n$breakpoint-keys: (xs, sm, md, lg, xl);\n\n/**\n * All-Purpose Media Query Mixin\n *\n * This mixin is extremely flexible. It accepts keys from the $breakpoints map,\n * pixel values for on the fly media queries, or unitless media queries like\n * \"orientation\". This mixin should be used whenever possible in the place of\n * hard-coded @media queries.\n *\n * Examples.\n *\n * // Min or Max\n * @include breakpoint(sm) {...} // 640px and above\n * @include breakpoint(sm, max) {...} // 639px and below\n *\n * // Nesting for Min and Max\n * @include breakpoint(sm) { // min of 640px...\n *    @include breakpoint(md, max) {...} // ...and max of 849px\n * }\n *\n * // Custom px values\n * @include breakpoint(984) {...} // 984\n *\n * // Non-px values\n * @include breakpoint(landscape, orientation) {...} // @media (orientation: landscape)\n */\n@mixin breakpoint($breakpoint, $direction: min) {\n\t$breakpoint-value: get-breakpoint($breakpoint);\n\t@if $breakpoint-value {\n\t\t@if $direction == max {\n\t\t\t@media (max-width: ($breakpoint-value - 1)) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == min {\n\t\t\t@media (min-width: $breakpoint-value) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else {\n\t\t\t@media ($direction: $breakpoint-value) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t} @else {\n\t\t@if $direction == max {\n\t\t\t@media (max-width: $breakpoint) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if $direction == min {\n\t\t\t@media (min-width: $breakpoint) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else {\n\t\t\t@media ($direction: $breakpoint) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Mobile Menu Mixin\n *\n * Passes when less than the menu breakpoint or hover is not supported.\n */\n@mixin mobile-menu {\n\t@media (max-width: (get-breakpoint(menu) - 1)),\n\t(hover: none) {\n\t\t@content;\n\t}\n}\n\n/**\n * Desktop Menu Mixin\n *\n * Passes when greater than or equal to the menu breakpoint and  hover is supported.\n * Secondarily, passes always in IE via -ms-high-contrast check.\n */\n@mixin desktop-menu {\n\t@media (min-width: get-breakpoint(menu)) and (hover: hover),\n\t(min-width: get-breakpoint(menu)) and (-ms-high-contrast: none),\n\t(min-width: get-breakpoint(menu)) and (-ms-high-contrast: active) {\n\t\t@content;\n\t}\n}\n\n/**\n * Hover Mixin\n *\n * Passes if hover is supported or if on IE, which doesn't support the hover media query.\n */\n@mixin hover {\n\t@media (hover: hover),\n\t(-ms-high-contrast: none),\n\t(-ms-high-contrast: active) {\n\t\t@content;\n\t}\n}\n\n/**\n * Touch Mixin\n *\n * Passes if hover is not supported.\n */\n@mixin touch {\n\t@media (hover: none) {\n\t\t@content;\n\t}\n}\n"]}